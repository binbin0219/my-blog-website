<%- include('./partials/header', { title: 'Settings' }) %>
<%- include('./partials/navBar') %>

<!-- Croppie.js -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.css">

<!-- Country-Region-Selector -->
<script src="/js/crs.min.js"></script>

<style>
    body {
        font-family: 'Calibri', sans-serif;
    }

    /* gender */
    .gender-radio-male,
    .gender-radio-female {
        opacity: 0.5;
    }
    .gender-radio-container[data-gender="male"] .gender-radio-male{
        opacity: 1;
    }
    .gender-radio-container[data-gender="female"] .gender-radio-female{
        opacity: 1;
    }
</style>

<!-- content -->
<div 
class="
    flex-col
    md:mt-[70px] md:max-w-[1000px] md:w-full md:mx-auto md:flex md:items-center md:justify-center md:flex-row
">
    <div 
    class="
        mt-[50px]
        border-e-0 w-full p-8 m-0
        md:flex md:flex-col md:gap-2 md:p-2 md:pe-[90px] md:border-e-2 md:self-start md:w-fit
    ">
        <h4 class="font-extrabold text-4xl p-3">Settings</h4>
        <ul class="flex flex-col gap-2">
            <li>
                <button type="button" 
                class="
                    text-left rounded-lg hover:bg-slate-100 font-medium bg-slate-100 p-3
                    md:w-[200px] 
                    w-full
                ">
                    Public profile
                </button>
            </li>
            <li>
                <button type="button" 
                class="
                    text-left rounded-lg hover:bg-slate-100 font-medium p-3 cursor-not-allowed
                    md:w-[200px] 
                    w-full
                ">
                    Account Settings
                </button>
            </li>
            <li>
                <button type="button" 
                class="
                    text-left rounded-lg hover:bg-slate-100 font-medium p-3 cursor-not-allowed
                    md:w-[200px] 
                    w-full
                ">
                    Notifucations
                </button>
            </li>
        </ul>
    </div>
    <div 
    class="
        flex flex-col p-10 w-full 
        md:pt-[80px]
    ">
        <h1 class="font-extrabold text-4xl">Public Profile</h1>
        <div class="flex gap-7 mt-8 justify-center">
            <img id="avatar_preview" src="<%= user.avatar %>" alt="" class="rounded-full h-[100px] w-[100px] border-2">
            <div class="flex flex-col gap-3">
                <label for="upload_img_input" type="button" class="flex gap-2 items-center rounded-lg px-3 py-2 border-2 border-green-300 bg-green-100 text-sm text-green-600 hover:bg-green-200 cursor-pointer">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-upload">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                        <path d="M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2" />
                        <path d="M7 9l5 -5l5 5" />
                        <path d="M12 4l0 12" />
                    </svg>
                    Upload image
                    <input id="upload_img_input" accept="image/jpeg, image/png" type="file" name="avatar" class="hidden">
                </label>
                <button id="random_avatar_btn" type="button" class="flex gap-2 items-center rounded-lg px-3 py-2 border-2 border-indigo-300 bg-indigo-100 text-sm text-indigo-600 hover:bg-indigo-200">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-arrows-shuffle">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                        <path d="M18 4l3 3l-3 3" />
                        <path d="M18 20l3 -3l-3 -3" />
                        <path d="M3 7h3a5 5 0 0 1 5 5a5 5 0 0 0 5 5h5" />
                        <path d="M21 7h-5a4.978 4.978 0 0 0 -3 1m-4 8a4.984 4.984 0 0 1 -3 1h-3" />
                    </svg>
                    Random Avatar
                </button>
            </div>
        </div>
        <div class="flex flex-col mt-8 gap-5">
            <div>
                <label for="username_input" class="block font-bold">Username</label>
                <input id="username_input" type="text" name="username" value="<%= user.username %>" placeholder="username" class="px-3 py-2 border-2 border-slate-200 rounded-lg w-full">
            </div>
            <div class="flex w-full justify-between">
                <div class="w-[45%]">
                    <label for="first_name_input" class="block font-bold">Fist name</label>
                    <input id="first_name_input" type="text" name="firstName" value="<%= user.first_name %>" placeholder="First Name" class="px-3 py-2 border-2 border-slate-200 rounded-lg w-full">
                </div>
                <div class="w-[45%]">
                    <label for="last_name_input" class="block font-bold">Last name</label>
                    <input id="last_name_input" type="text" name="lastName" value="<%= user.last_name %>" placeholder="Last Name" class="px-3 py-2 border-2 border-slate-200 rounded-lg w-full">
                </div>
            </div>
            <div>
                <label class="block font-bold">Gender</label>
                <div id="gender_radio_container" data-gender="<%= user.gender.toLowerCase() %>" class="gender-radio-container flex w-full justify-between mt-2">
                    <div class="w-[45%]">
                        <label for="gender_radio_male" class="gender-radio-male px-3 py-2 border-2 border-sky-300 rounded-lg bg-sky-100 text-sky-600 hover:bg-sky-200 cursor-pointer inline-flex w-full">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="	#2986cc" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-mars me-3">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                <path d="M10 14m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0"></path>
                                <path d="M19 5l-5.4 5.4"></path>
                                <path d="M19 5l-5 0"></path>
                                <path d="M19 5l0 5"></path>
                            </svg>
                            Male
                            <input id="gender_radio_male" type="radio" name="gender" value="Male" class="gender-radio hidden">
                        </label>
                    </div>
                    <div class="w-[45%]">
                        <label for="gender_radio_female" class="gender-radio-female px-3 py-2 border-2 border-pink-300 rounded-lg bg-pink-100 text-pink-600 inline-flex w-full cursor-pointer hover:opacity-100 hover:bg-pink-200">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#c90076" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-venus me-3">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                <path d="M12 9m-5 0a5 5 0 1 0 10 0a5 5 0 1 0 -10 0"></path>
                                <path d="M12 14l0 7"></path>
                                <path d="M9 18l6 0"></path>
                            </svg>
                            Female
                            <input id="gender_radio_female" type="radio" name="gender" value="Female" class="gender-radio hidden">
                        </label>
                    </div>
                </div>
            </div>
            <div class="flex w-full justify-between">
                <div class="w-[45%]">
                    <label for="country_selector" class="block font-bold">Country</label>
                    <select data-default-value="<%= user.country %>" data-region-id="region_selector" id="country_selector" name="country" value="Malaysia" class="crs-country px-3 py-2 border-2 border-slate-200 rounded-lg w-full"></select>
                </div>
                <div class="w-[45%]">
                    <label for="region_selector" class="block font-bold">Region</label>
                    <select data-default-value="<%= user.region %>" id="region_selector" name="region" placeholder="Select Your Region" class="px-3 py-2 border-2 border-slate-200 rounded-lg w-full"></select>
                </div>
            </div>
            <div class="flex w-full justify-between">
                <div class="w-[45%]">
                    <label for="relationship_status_selector" class="block font-bold">Relationship Status</label>
                    <select id="relationship_status_selector" name="relationshipStatus" class="px-3 py-2 border-2 border-slate-200 rounded-lg w-full">
                        <option data-index="0" selected value="">Not Specified</option>
                        <option data-index="1" value="Single">Single</option>
                        <option data-index="2" value="Married">Married</option>
                        <option data-index="3" value="Divorced">Divorced</option>
                        <option data-index="4" value="Widowed">Widowed</option>
                        <option data-index="5" value="Separated">Separated</option>
                        <option data-index="6" value="Looking For Relationship">Other</option>
                        <option data-index="7" value="It's Complicated">It's Complicated</option>
                        <option data-index="8" value="Forever Alone">Forever Alone</option>
                    </select>
                </div>
                <div class="w-[45%]">
                    <label for="occupation_selector" class="block font-bold">Occupation</label>
                    <select id="occupation_selector" name="occupation" class="px-3 py-2 border-2 border-slate-200 rounded-lg w-full">
                        <option value="" selected data-index="0">Not Specified</option>

                        <!-- Technology & IT -->
                        <optgroup label="Technology & IT">
                            <option value="Software Engineer" data-index="1">Software Engineer</option>
                            <option value="Web Developer" data-index="2">Web Developer</option>
                            <option value="Data Scientist" data-index="3">Data Scientist</option>
                            <option value="IT Specialist" data-index="4">IT Specialist</option>
                            <option value="Cybersecurity Analyst" data-index="5">Cybersecurity Analyst</option>
                        </optgroup>

                        <!-- Healthcare -->
                        <optgroup label="Healthcare">
                            <option value="Doctor" data-index="6">Doctor</option>
                            <option value="Nurse" data-index="7">Nurse</option>
                            <option value="Pharmacist" data-index="8">Pharmacist</option>
                            <option value="Therapist" data-index="9">Therapist</option>
                            <option value="Medical Technician" data-index="10">Medical Technician</option>
                        </optgroup>

                        <!-- Education -->
                        <optgroup label="Education">
                            <option value="Teacher" data-index="11">Teacher</option>
                            <option value="Professor" data-index="12">Professor</option>
                            <option value="Academic Researcher" data-index="13">Academic Researcher</option>
                            <option value="Tutor" data-index="14">Tutor</option>
                        </optgroup>

                        <!-- Business & Finance -->
                        <optgroup label="Business & Finance">
                            <option value="Accountant" data-index="15">Accountant</option>
                            <option value="Financial Analyst" data-index="16">Financial Analyst</option>
                            <option value="Marketing Specialist" data-index="17">Marketing Specialist</option>
                            <option value="Entrepreneur" data-index="18">Entrepreneur</option>
                            <option value="HR Manager" data-index="19">HR Manager</option>
                        </optgroup>

                        <!-- Engineering & Construction -->
                        <optgroup label="Engineering & Construction">
                            <option value="Civil Engineer" data-index="20">Civil Engineer</option>
                            <option value="Mechanical Engineer" data-index="21">Mechanical Engineer</option>
                            <option value="Architect" data-index="22">Architect</option>
                            <option value="Electrician" data-index="23">Electrician</option>
                            <option value="Construction Worker" data-index="24">Construction Worker</option>
                        </optgroup>

                        <!-- Creative Arts & Media -->
                        <optgroup label="Creative Arts & Media">
                            <option value="Graphic Designer" data-index="25">Graphic Designer</option>
                            <option value="Writer/Author" data-index="26">Writer/Author</option>
                            <option value="Photographer" data-index="27">Photographer</option>
                            <option value="Film Maker" data-index="28">Film Maker</option>
                            <option value="Musician" data-index="29">Musician</option>
                        </optgroup>

                        <!-- Skilled Trades -->
                        <optgroup label="Skilled Trades">
                            <option value="Chef" data-index="30">Chef</option>
                            <option value="Carpenter" data-index="31">Carpenter</option>
                            <option value="Plumber" data-index="32">Plumber</option>
                            <option value="Mechanic" data-index="33">Mechanic</option>
                        </optgroup>

                        <!-- Public Service & Law -->
                        <optgroup label="Public Service & Law">
                            <option value="Police Officer" data-index="34">Police Officer</option>
                            <option value="Firefighter" data-index="35">Firefighter</option>
                            <option value="Lawyer" data-index="36">Lawyer</option>
                            <option value="Social Worker" data-index="37">Social Worker</option>
                        </optgroup>

                        <!-- Science & Research -->
                        <optgroup label="Science & Research">
                            <option value="Biologist" data-index="38">Biologist</option>
                            <option value="Physicist" data-index="39">Physicist</option>
                            <option value="Chemist" data-index="40">Chemist</option>
                            <option value="Researcher" data-index="41">Researcher</option>
                        </optgroup>
                    </select>
                </div>
            </div>
            <div>
                <label for="phone_number_input" class="block font-bold">Phone Number</label>
                <input id="phone_number_input" value="<%= user.phone_number && user.phone_number.phoneNumberBody %>" name="phoneNumber" class="px-3 py-2 border-2 border-slate-200 rounded-lg w-full outline-none">
            </div>
            <div>
                <label for="accountName" class="block font-bold">Account name</label>
                <input disabled type="text" name="accountName" value="*******<%= user.account_name %>" placeholder="Account name" class="px-3 py-2 border-2 border-slate-200 rounded-lg w-full">
            </div>
            <div>
                <label for="password" class="block font-bold">Password</label>
                <input disabled type="password" name="password" value="12345456" placeholder="Password" class="px-3 py-2 border-2 border-slate-200 rounded-lg w-full">
            </div>
            <div class="w-full flex justify-end">
                <button id="save_changes_btn" class="bg-indigo-600 text-white px-3 py-2 rounded-lg font-bold">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-device-floppy inline">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                        <path d="M6 4h10l4 4v10a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2" />
                        <path d="M12 14m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
                        <path d="M14 4l0 4l-6 0l0 -4" />
                    </svg>
                    Save Changes
                </button>
            </div>
        </div>  
    </div>
</div>

<script>

    document.addEventListener('DOMContentLoaded', () => {
        // Set relationship status from user data
        const relStaSelector = document.querySelector('#relationship_status_selector');
        const userRelStaOption = relStaSelector.querySelector(`option[value="<%- user.relationship_status %>"]`);
        relStaSelector.selectedIndex = userRelStaOption.getAttribute('data-index');

        const occupationSelector = document.querySelector('#occupation_selector');
        const userOccOption = occupationSelector.querySelector(`option[value="<%- user.occupation %>"]`);
        occupationSelector.selectedIndex = userOccOption.getAttribute('data-index');
    })

    // gender radio
    const genderRadio = document.querySelectorAll('.gender-radio');
    genderRadio && genderRadio.forEach((radio) => {
        radio.addEventListener('change', () => {
            const gender = radio.value;
            document.querySelector('.gender-radio-container').setAttribute('data-gender', (gender).toLowerCase());
        })
    })

    // image upload input
    const uploadImgInput = document.querySelector('#upload_img_input');
    uploadImgInput && uploadImgInput.addEventListener('input', () => {

        const maxSizeInBytes = 2 * 1024 * 1024;
        if(uploadImgInput.files && uploadImgInput.files[0].size > maxSizeInBytes) {
            showToast('error', 'Error', 'Image size must be less than 2MB.');
            return;
        }

        confDialog(
            'Crop your avatar', 
            `<div class="w-full flex justify-center">
                <div id="avatar_croppie"></div>
            </div>`, 
            'Confirm', 
            async () => {
                const avatarPreview = document.querySelector('#avatar_preview');
                const resultAvatar = await avatarCroppie.result('base64', 'viewport', 'png', true);
                avatarPreview.src = resultAvatar;

                // Clear croppie.js
                avatarCroppie.destroy();

                // Close confirmation dialog
                confDialog();
            }
        );

        // Croppie.js initialization
        const avatarCroppieContainer = document.querySelector('#avatar_croppie');
        const avatarCroppie = new Croppie(avatarCroppieContainer, {
            enableOrientation: true,
            viewport: {
                width: 200,
                height: 200,
                type: 'circle'
            },
            boundary: {
                width: 300,
                height: 300
            }
        });

        avatarCroppie.bind({
            url: URL.createObjectURL(uploadImgInput.files[0])
        });
    })

    // Random avatar button
    const randomAvatarBtn = document.querySelector('#random_avatar_btn');
    randomAvatarBtn && randomAvatarBtn.addEventListener('click', async () => {
        if(randomAvatarBtn.classList.contains('button-disabled')) return;

        // Disable button
        randomAvatarBtn.classList.add('button-disabled');

        const gender = document.querySelector('.gender-radio-container').getAttribute('data-gender');
        fetch(`/api/random-avatar/${gender}`)
        .then(res => res.json())
        .then(data => {
            setTimeout(() => {
                const avatarPreview = document.querySelector('#avatar_preview');
                avatarPreview.src = data.avatar;

                // Re-enable button
                randomAvatarBtn.classList.remove('button-disabled');
            }, 500);
        })
        .catch(err => {
            console.log(err);
            showToast('error', 'Error', 'Something went wrong.');

            // Re-enable button
            randomAvatarBtn.classList.remove('button-disabled');
        })
    })

    // Phone number input
    const phoneNumberInput = document.querySelector('#phone_number_input');
    phoneNumberInput && phoneNumberInput.addEventListener('input', () => {
        const isNumberValid = iti.isValidNumber();
        if(isNumberValid) {
            phoneNumberInput.classList.remove('border-red-500');
        } else {
            phoneNumberInput.classList.add('border-red-500');
        }
    })

    // Save changes button
    const saveChangesBtn = document.querySelector('#save_changes_btn');
    saveChangesBtn && saveChangesBtn.addEventListener('click', () => {
        if(saveChangesBtn.classList.contains('button-disabled')) return;

        // Disable button
        saveChangesBtn.classList.add('button-disabled');

        const avatarBase64 = document.querySelector('#avatar_preview').src;
        const gender = document.querySelector('.gender-radio-container').getAttribute('data-gender');
        const username = document.querySelector('#username_input').value;
        const firstName = document.querySelector('#first_name_input').value;
        const lastName = document.querySelector('#last_name_input').value;
        const country = document.querySelector('#country_selector').value;
        const region = document.querySelector('#region_selector').value;
        const relationshipStatus = document.querySelector('#relationship_status_selector').value;
        const occupation = document.querySelector('#occupation_selector').value;

        // Get phone number data
        const phoneNumberDetails = iti.getSelectedCountryData();
        const isNumberValid = iti.isValidNumber();
        let phoneNumber = null;
        if(Object.keys(phoneNumberDetails).length !== 0 && isNumberValid) {
            phoneNumber = {
                dialCode: phoneNumberDetails.dialCode,
                phoneNumberBody: document.querySelector('#phone_number_input').value,
                fullNumber: `+${phoneNumberDetails.dialCode}${document.querySelector('#phone_number_input').value}`,
                countryISO2: phoneNumberDetails.iso2,
                countryName: phoneNumberDetails.name,
            }
        }
        
        const requestBody = {
            user_id: <%= user.user_id %>,
            avatar_base64: avatarBase64,
            gender: gender[0].toUpperCase() + gender.slice(1),
            username: username,
            first_name: firstName,
            last_name: lastName,
        }
        phoneNumber && (requestBody['phone_number'] = JSON.stringify(phoneNumber));
        country !== "" && (requestBody['country'] = country);
        region !== "" && (requestBody['region'] = region);
        relationshipStatus !== "" && (requestBody['relationship_status'] = relationshipStatus);
        occupation !== "" && (requestBody['occupation'] = occupation);

        fetch('/api/user-profile/update', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestBody)
        })
        .then(res => res.json())
        .then(data => {
            setTimeout(() => {
                // Re-enable button
                saveChangesBtn.classList.remove('button-disabled');
                showToast('success', 'Success', 'Your profile has been updated.');
            }, 500);
        })
        .catch(err => {
            console.log(err);
            showToast('error', 'Error', 'Something went wrong.');
            // Re-enable button
            saveChangesBtn.classList.remove('button-disabled');
        })
    })
</script>

<!-- Intl-tel-input -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/intl-tel-input@25.2.0/build/css/intlTelInput.css">
<script src="https://cdn.jsdelivr.net/npm/intl-tel-input@25.2.0/build/js/intlTelInput.min.js"></script>
<script>
    const input = document.querySelector("#phone_number_input");
    const iti = window.intlTelInput(document.querySelector("#phone_number_input"), {
        loadUtils: () => import("https://cdn.jsdelivr.net/npm/intl-tel-input@25.2.0/build/js/utils.js"),
        containerClass: "w-full",
        separateDialCode: true,
        initialCountry: "<%= user.phone_number && user.phone_number.countryISO2 %>",
    });
</script>

<%- include('./partials/footer') %>