<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title><%= title || "Blog" %></title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link
            href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
            rel="stylesheet">
        <link rel="stylesheet"
            href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
        <link rel="stylesheet"
            href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
        
        <!-- main.css -->
        <link rel="stylesheet" href="/styles/main.css">
    
        <!-- Figaz One Font -->
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Fugaz+One&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    
        <!-- InstantSearch.js -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/instantsearch.css/themes/algolia-min.css">
        <script src="https://cdn.jsdelivr.net/npm/instantsearch.js@4"></script>

        <!-- Algolia -->
        <script src="https://cdn.jsdelivr.net/npm/algoliasearch@5.17.1/dist/algoliasearch.umd.min.js"></script>
    </head>

    <script>
        const routeName = <%- typeof routeName !== 'undefined' && JSON.stringify(routeName) %>;
        const userData = <%- typeof user !== 'undefined' && JSON.stringify(user) %>;
        const loader = document.createElement('div');
        loader.className = 'w-full h-full flex flex-col justify-center items-center absolute start-0 top-0 text-[6px] bg-white';
        loader.innerHTML = `
            <div class="loader mb-[.5em]"></div>
            <a href="/" class="text-[3.5em] text-indigo-600 cursor-pointer hover:text-indigo-500" style="font-family: fugaz one;">Blogify</a>
        `;

        function getLoaderElement(tailwwindStyles) {
            const position = tailwwindStyles && tailwwindStyles.position ? tailwwindStyles.position : 'absolute';
            const fontSize = tailwwindStyles && tailwwindStyles.fontSize ? tailwwindStyles.fontSize : 'text-[6px]';
            const marginTop = tailwwindStyles && tailwwindStyles.marginTop ? tailwwindStyles.marginTop : '';
            const marginBottom = tailwwindStyles && tailwwindStyles.marginBottom ? tailwwindStyles.marginBottom : '';
            const loader = document.createElement('div');
            loader.className = `w-full h-full flex flex-col justify-center items-center ${position} start-0 top-0 ${fontSize} ${marginTop} ${marginBottom} bg-white`;
            loader.innerHTML = `
                <div class="loader mb-[.5em]"></div>
                <a href="/" class="text-[3.5em] text-indigo-600 cursor-pointer hover:text-indigo-500" style="font-family: fugaz one;">Blogify</a>
            `;
            return loader;
        }

        // Confirmation Dialog
        function confDialog(header, body, actionText, action) {
            const confDialog = document.querySelector('#conf_dialog');
            const confDialogHeader = confDialog.querySelector('.conf-dialog-header');
            const confDialogBody = confDialog.querySelector('.conf-dialog-body');
            const confDialogAction = confDialog.querySelector('.conf-dialog-action');

            // Clear confirmation dialog
            confDialogHeader.innerHTML = '';
            confDialogBody.innerHTML = '';
            confDialogAction.innerHTML = '';

            // Close confirmation dialog
            if(!confDialog.classList.contains('hidden')) {
                confDialog.classList.add('hidden');
                return;
            }

            if(!header || !body || !actionText || !action) {
                confDialog.classList.add('hidden');
                return;
            }

            // Open confirmation dialog
            confDialogHeader.innerHTML = header;
            confDialogBody.innerHTML = body;
            confDialogAction.innerHTML = actionText;
            confDialogAction.onclick = action;
            confDialog.classList.remove('hidden');
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Remove loader
            setTimeout(() => {
                document.querySelector('#page_loader')?.remove();
            }, 500);

            // Dropdown toggle
            const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
            dropdownToggles.forEach(toggle => {
                toggle.addEventListener('click', () => {
                    const dropdown = toggle.closest('.dropdown');
                    dropdown.querySelector('.dropdown-menu').classList.toggle('show');
                });
            });
        })

        // Click outside dropdown menu to close
        document.addEventListener('click', (e) => {
            const target = e.target;
            const isDropdownChild = target.closest('.dropdown');
            const isDropdownToggle = target.classList.contains('dropdown-toggle');
            if(!isDropdownChild && !isDropdownToggle) {
                document.querySelectorAll('.dropdown-menu').forEach(menu => {
                    menu.classList.remove('show');
                })
            }
        })

        // Time ago
        function timeAgo(timestamp) {
            const currentTime = new Date();
            const givenTime = new Date(timestamp);

            const differenceInSeconds = Math.floor((currentTime - givenTime) / 1000);

            if(differenceInSeconds < 1) {
                return 'just now';
            }

            if (differenceInSeconds < 60) {
                return `${differenceInSeconds} second${differenceInSeconds > 1 ? 's' : ''} ago`;
            } else if (differenceInSeconds < 3600) {
                const minutes = Math.floor(differenceInSeconds / 60);
                return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;
            } else if (differenceInSeconds < 86400) {
                const hours = Math.floor(differenceInSeconds / 3600);
                return `${hours} hour${hours > 1 ? 's' : ''} ago`;
            } else if (differenceInSeconds < 604800) { // 7 days
                const days = Math.floor(differenceInSeconds / 86400);
                return `${days} day${days > 1 ? 's' : ''} ago`;
            } else if (differenceInSeconds < 2628000) { // ~1 month (30.44 days)
                const weeks = Math.floor(differenceInSeconds / 604800);
                return `${weeks} week${weeks > 1 ? 's' : ''} ago`;
            } else if (differenceInSeconds < 31536000) { // ~1 year (365.25 days)
                const months = Math.floor(differenceInSeconds / 2628000);
                return `${months} month${months > 1 ? 's' : ''} ago`;
            } else {
                const years = Math.floor(differenceInSeconds / 31536000);
                return `${years} year${years > 1 ? 's' : ''} ago`;
            }
        }

        // Accept friend request
        async function acceptFriendRequest(user_id) {
            return fetch(`/api/friend-request/accept/${user_id}`)
            .then(response => {
                if(!response.ok) throw new Error('Failed to accept friend request');
                return response.json();
            })
            .then(data => {
                return data;
            })
            .catch(error => {
                throw error;
            });
        }

        // Reject friend request
        async function rejectFriendRequest(user_id) {
            return fetch(`/api/friend-request/reject/${user_id}`)
            .then(response => {
                if(!response.ok) throw new Error('Failed to reject friend request');
                return response.json();
            })
            .then(data => {
                return data;
            })
            .catch(error => {
                throw error;
            });
        }

        // Unsend friend request
        async function unsendFriendRequest(user_id) {
            return fetch(`/api/friend-request/unsend/${user_id}`)
            .then(response => {
                if(!response.ok) throw new Error('Failed to unsend friend request');
                return response.json();
            })
            .then(data => {
                return data;
            })
            .catch(error => {
                throw error;
            });
        }

        // Toast
        const toastIconHTML = {
            success: `
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="toast-icon icon icon-tabler icons-tabler-filled icon-tabler-circle-check fill-green-600">
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-1.293 5.953a1 1 0 0 0 -1.32 -.083l-.094 .083l-3.293 3.292l-1.293 -1.292l-.094 -.083a1 1 0 0 0 -1.403 1.403l.083 .094l2 2l.094 .083a1 1 0 0 0 1.226 0l.094 -.083l4 -4l.083 -.094a1 1 0 0 0 -.083 -1.32z" />
            </svg>
            `,
            error: `
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="toast-icon icon icon-tabler icons-tabler-filled icon-tabler-exclamation-circle fill-red-600">
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M17 3.34a10 10 0 1 1 -15 8.66l.005 -.324a10 10 0 0 1 14.995 -8.336m-5 11.66a1 1 0 0 0 -1 1v.01a1 1 0 0 0 2 0v-.01a1 1 0 0 0 -1 -1m0 -7a1 1 0 0 0 -1 1v4a1 1 0 0 0 2 0v-4a1 1 0 0 0 -1 -1" />
            </svg>
            `,
            info: `
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="toast-icon icon icon-tabler icons-tabler-filled icon-tabler-info-circle fill-blue-600">
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M12 2c5.523 0 10 4.477 10 10a10 10 0 0 1 -19.995 .324l-.005 -.324l.004 -.28c.148 -5.393 4.566 -9.72 9.996 -9.72zm0 9h-1l-.117 .007a1 1 0 0 0 0 1.986l.117 .007v3l.007 .117a1 1 0 0 0 .876 .876l.117 .007h1l.117 -.007a1 1 0 0 0 .876 -.876l.007 -.117l-.007 -.117a1 1 0 0 0 -.764 -.857l-.112 -.02l-.117 -.006v-3l-.007 -.117a1 1 0 0 0 -.876 -.876l-.117 -.007zm.01 -3l-.127 .007a1 1 0 0 0 0 1.986l.117 .007l.127 -.007a1 1 0 0 0 0 -1.986l-.117 -.007z" />
            </svg>
            `
        }
        const toastSidebarHTML = {
            success: `<div class="toast-sidebar absolute h-full w-[5px] bg-green-600 start-[-1px] top-0"></div>`,
            error: `<div class="toast-sidebar absolute h-full w-[5px] bg-red-600 start-[-1px] top-0"></div>`,
            info: `<div class="toast-sidebar absolute h-full w-[5px] bg-blue-600 start-[-1px] top-0"></div>`
        }
        function showToast(type, header, body) {
            const toast = document.getElementById('toast');
            const toastHeader = toast.querySelector('.toast-header');
            const toastBody = toast.querySelector('.toast-body');
            const toastSidebar = toast.querySelector('.toast-sidebar');
            const toastIcon = toast.querySelector('.toast-icon');
            toastHeader.innerHTML = header;
            toastBody.innerHTML = body;
            toastSidebar.innerHTML = toastSidebarHTML[type];
            toastIcon.innerHTML = toastIconHTML[type];
            toast.classList.remove('hidden');
            setTimeout(() => {
                toast.classList.add('hidden');
            }, 5000);
        }
        function hideToast() {
            const toast = document.getElementById('toast');
            toast.classList.add('hidden');
        }
    </script>
<body>

<!-- Confirmation Dialog -->
<div id="conf_dialog" class="fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex justify-center items-start pt-10 hidden" style="z-index: 9999;">
    <div class="bg-white min-w-[400px] w-fit min-h-[200px] h-fit rounded-lg flex flex-col justify-center items-start gap-2 p-5">
        <h4 class="conf-dialog-header text-2xl font-bold"></h4>
        <div class="conf-dialog-body text-lg w-full max-w-[100%] overflow-x-auto"></div>
        <div class="flex gap-5 w-full justify-end mt-7">
            <button onclick="confDialog();" class="bg-white border-black border-2 text-black px-3 py-2 rounded-lg font-bold hover:bg-black hover:text-white">Cancel</button>
            <button class="conf-dialog-action bg-red-600 text-white px-3 py-2 rounded-lg font-bold hover:bg-red-800">Confirm</button>
        </div>
    </div>
</div>

<!-- Loader -->
<div id="page_loader" class="w-full h-full flex flex-col justify-center items-center bg-black bg-opacity-50 fixed top-0 left-0 text-[10px] backdrop-blur-sm" style="z-index: 1001;">
    <div class="loader mb-[.5em]"></div>
    <a href="/" class="text-[3.5em] text-indigo-600 cursor-pointer hover:text-indigo-500" style="font-family: fugaz one;">Blogify</a>
</div>

<!-- Toast -->
<div id="toast" class="fixed bottom-0 end-0 me-3 mb-4 p-2 flex gap-3 items-center bg-white border rounded-lg shadow-lg w-[300px] overflow-x-hidden hidden" style="z-index: 9999;">
    <div class="toast-sidebar">
        <div class="absolute h-full w-[5px] bg-green-600 start-[-1px] top-0"></div>
    </div>
    <div class="toast-icon">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" class="icon icon-tabler icons-tabler-filled icon-tabler-circle-check fill-green-600">
            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
            <path d="M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-1.293 5.953a1 1 0 0 0 -1.32 -.083l-.094 .083l-3.293 3.292l-1.293 -1.292l-.094 -.083a1 1 0 0 0 -1.403 1.403l.083 .094l2 2l.094 .083a1 1 0 0 0 1.226 0l.094 -.083l4 -4l.083 -.094a1 1 0 0 0 -.083 -1.32z" />
        </svg>
    </div>
    <div class="flex flex-col">
        <p class="toast-header font-bold">Success</p>
        <p class="toast-body text-slate-600">Saved successfully</p>
    </div>
    <svg onclick="hideToast()" xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-x absolute top-0 end-0 cursor-pointer hover:opacity-50 me-2 mt-2">
        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
        <path d="M18 6l-12 12" />
        <path d="M6 6l12 12" />
    </svg>
</div>
